
Timer_0_overflow.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000820  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000007  00800060  00800060  00000894  2**0
                  ALLOC
  2 .stab         000008ac  00000000  00000000  00000894  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000046d  00000000  00000000  00001140  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 5f 03 	jmp	0x6be	; 0x6be <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a7 36       	cpi	r26, 0x67	; 103
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 9a 03 	call	0x734	; 0x734 <main>
  74:	0c 94 0e 04 	jmp	0x81c	; 0x81c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_set_pin_value>:
#include"STD_TYPES.h"
#include "DIO_Configuration.h"
#include "DIO_Private.h"
#include "DIO_Interface.h"

u8 DIO_set_pin_value(u8 Port_no,u8 Pin_no,u8 Pin_value){
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	00 d0       	rcall	.+0      	; 0x82 <DIO_set_pin_value+0x6>
  82:	00 d0       	rcall	.+0      	; 0x84 <DIO_set_pin_value+0x8>
  84:	00 d0       	rcall	.+0      	; 0x86 <DIO_set_pin_value+0xa>
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	8a 83       	std	Y+2, r24	; 0x02
  8c:	6b 83       	std	Y+3, r22	; 0x03
  8e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Error_state=0;
  90:	19 82       	std	Y+1, r1	; 0x01
	if(Port_no>=DIO_max_port_no){
  92:	8a 81       	ldd	r24, Y+2	; 0x02
  94:	84 30       	cpi	r24, 0x04	; 4
  96:	18 f0       	brcs	.+6      	; 0x9e <DIO_set_pin_value+0x22>
		Error_state=1;
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	89 83       	std	Y+1, r24	; 0x01
  9c:	e0 c0       	rjmp	.+448    	; 0x25e <DIO_set_pin_value+0x1e2>
	}else if(Pin_no>=DIO_max_pin_no){
  9e:	8b 81       	ldd	r24, Y+3	; 0x03
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	18 f0       	brcs	.+6      	; 0xaa <DIO_set_pin_value+0x2e>
		Error_state=2;
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	89 83       	std	Y+1, r24	; 0x01
  a8:	da c0       	rjmp	.+436    	; 0x25e <DIO_set_pin_value+0x1e2>
	}else if((Pin_value!=DIO_Low)&&(Pin_value!=DIO_High)){
  aa:	8c 81       	ldd	r24, Y+4	; 0x04
  ac:	88 23       	and	r24, r24
  ae:	31 f0       	breq	.+12     	; 0xbc <DIO_set_pin_value+0x40>
  b0:	8c 81       	ldd	r24, Y+4	; 0x04
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	19 f0       	breq	.+6      	; 0xbc <DIO_set_pin_value+0x40>
		Error_state=3;
  b6:	83 e0       	ldi	r24, 0x03	; 3
  b8:	89 83       	std	Y+1, r24	; 0x01
  ba:	d1 c0       	rjmp	.+418    	; 0x25e <DIO_set_pin_value+0x1e2>
	}else{
		switch(Port_no){
  bc:	8a 81       	ldd	r24, Y+2	; 0x02
  be:	28 2f       	mov	r18, r24
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	3e 83       	std	Y+6, r19	; 0x06
  c4:	2d 83       	std	Y+5, r18	; 0x05
  c6:	8d 81       	ldd	r24, Y+5	; 0x05
  c8:	9e 81       	ldd	r25, Y+6	; 0x06
  ca:	81 30       	cpi	r24, 0x01	; 1
  cc:	91 05       	cpc	r25, r1
  ce:	09 f4       	brne	.+2      	; 0xd2 <DIO_set_pin_value+0x56>
  d0:	43 c0       	rjmp	.+134    	; 0x158 <DIO_set_pin_value+0xdc>
  d2:	2d 81       	ldd	r18, Y+5	; 0x05
  d4:	3e 81       	ldd	r19, Y+6	; 0x06
  d6:	22 30       	cpi	r18, 0x02	; 2
  d8:	31 05       	cpc	r19, r1
  da:	2c f4       	brge	.+10     	; 0xe6 <DIO_set_pin_value+0x6a>
  dc:	8d 81       	ldd	r24, Y+5	; 0x05
  de:	9e 81       	ldd	r25, Y+6	; 0x06
  e0:	00 97       	sbiw	r24, 0x00	; 0
  e2:	71 f0       	breq	.+28     	; 0x100 <DIO_set_pin_value+0x84>
  e4:	bc c0       	rjmp	.+376    	; 0x25e <DIO_set_pin_value+0x1e2>
  e6:	2d 81       	ldd	r18, Y+5	; 0x05
  e8:	3e 81       	ldd	r19, Y+6	; 0x06
  ea:	22 30       	cpi	r18, 0x02	; 2
  ec:	31 05       	cpc	r19, r1
  ee:	09 f4       	brne	.+2      	; 0xf2 <DIO_set_pin_value+0x76>
  f0:	5f c0       	rjmp	.+190    	; 0x1b0 <DIO_set_pin_value+0x134>
  f2:	8d 81       	ldd	r24, Y+5	; 0x05
  f4:	9e 81       	ldd	r25, Y+6	; 0x06
  f6:	83 30       	cpi	r24, 0x03	; 3
  f8:	91 05       	cpc	r25, r1
  fa:	09 f4       	brne	.+2      	; 0xfe <DIO_set_pin_value+0x82>
  fc:	85 c0       	rjmp	.+266    	; 0x208 <DIO_set_pin_value+0x18c>
  fe:	af c0       	rjmp	.+350    	; 0x25e <DIO_set_pin_value+0x1e2>
		case Group_A: assign_bit(DIO_u8_PORTA,Pin_no,Pin_value);
 100:	8c 81       	ldd	r24, Y+4	; 0x04
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	a1 f4       	brne	.+40     	; 0x12e <DIO_set_pin_value+0xb2>
 106:	ab e3       	ldi	r26, 0x3B	; 59
 108:	b0 e0       	ldi	r27, 0x00	; 0
 10a:	eb e3       	ldi	r30, 0x3B	; 59
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	48 2f       	mov	r20, r24
 112:	8b 81       	ldd	r24, Y+3	; 0x03
 114:	28 2f       	mov	r18, r24
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 2e       	mov	r0, r18
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_set_pin_value+0xa8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	0a 94       	dec	r0
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_set_pin_value+0xa4>
 128:	84 2b       	or	r24, r20
 12a:	8c 93       	st	X, r24
 12c:	98 c0       	rjmp	.+304    	; 0x25e <DIO_set_pin_value+0x1e2>
 12e:	ab e3       	ldi	r26, 0x3B	; 59
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	eb e3       	ldi	r30, 0x3B	; 59
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	48 2f       	mov	r20, r24
 13a:	8b 81       	ldd	r24, Y+3	; 0x03
 13c:	28 2f       	mov	r18, r24
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	02 2e       	mov	r0, r18
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_set_pin_value+0xd0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	0a 94       	dec	r0
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_set_pin_value+0xcc>
 150:	80 95       	com	r24
 152:	84 23       	and	r24, r20
 154:	8c 93       	st	X, r24
 156:	83 c0       	rjmp	.+262    	; 0x25e <DIO_set_pin_value+0x1e2>
		break;
		case Group_B: assign_bit(DIO_u8_PORTB,Pin_no,Pin_value);
 158:	8c 81       	ldd	r24, Y+4	; 0x04
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	a1 f4       	brne	.+40     	; 0x186 <DIO_set_pin_value+0x10a>
 15e:	a8 e3       	ldi	r26, 0x38	; 56
 160:	b0 e0       	ldi	r27, 0x00	; 0
 162:	e8 e3       	ldi	r30, 0x38	; 56
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	48 2f       	mov	r20, r24
 16a:	8b 81       	ldd	r24, Y+3	; 0x03
 16c:	28 2f       	mov	r18, r24
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 2e       	mov	r0, r18
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_set_pin_value+0x100>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	0a 94       	dec	r0
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_set_pin_value+0xfc>
 180:	84 2b       	or	r24, r20
 182:	8c 93       	st	X, r24
 184:	6c c0       	rjmp	.+216    	; 0x25e <DIO_set_pin_value+0x1e2>
 186:	a8 e3       	ldi	r26, 0x38	; 56
 188:	b0 e0       	ldi	r27, 0x00	; 0
 18a:	e8 e3       	ldi	r30, 0x38	; 56
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	48 2f       	mov	r20, r24
 192:	8b 81       	ldd	r24, Y+3	; 0x03
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 2e       	mov	r0, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_set_pin_value+0x128>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	0a 94       	dec	r0
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_set_pin_value+0x124>
 1a8:	80 95       	com	r24
 1aa:	84 23       	and	r24, r20
 1ac:	8c 93       	st	X, r24
 1ae:	57 c0       	rjmp	.+174    	; 0x25e <DIO_set_pin_value+0x1e2>
		break;
		case Group_C: assign_bit(DIO_u8_PORTC,Pin_no,Pin_value);
 1b0:	8c 81       	ldd	r24, Y+4	; 0x04
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	a1 f4       	brne	.+40     	; 0x1de <DIO_set_pin_value+0x162>
 1b6:	a5 e3       	ldi	r26, 0x35	; 53
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e5 e3       	ldi	r30, 0x35	; 53
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	48 2f       	mov	r20, r24
 1c2:	8b 81       	ldd	r24, Y+3	; 0x03
 1c4:	28 2f       	mov	r18, r24
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 2e       	mov	r0, r18
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_set_pin_value+0x158>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_set_pin_value+0x154>
 1d8:	84 2b       	or	r24, r20
 1da:	8c 93       	st	X, r24
 1dc:	40 c0       	rjmp	.+128    	; 0x25e <DIO_set_pin_value+0x1e2>
 1de:	a5 e3       	ldi	r26, 0x35	; 53
 1e0:	b0 e0       	ldi	r27, 0x00	; 0
 1e2:	e5 e3       	ldi	r30, 0x35	; 53
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	48 2f       	mov	r20, r24
 1ea:	8b 81       	ldd	r24, Y+3	; 0x03
 1ec:	28 2f       	mov	r18, r24
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 2e       	mov	r0, r18
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_set_pin_value+0x180>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	0a 94       	dec	r0
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_set_pin_value+0x17c>
 200:	80 95       	com	r24
 202:	84 23       	and	r24, r20
 204:	8c 93       	st	X, r24
 206:	2b c0       	rjmp	.+86     	; 0x25e <DIO_set_pin_value+0x1e2>
		break;
		case Group_D: assign_bit(DIO_u8_PORTD,Pin_no,Pin_value);
 208:	8c 81       	ldd	r24, Y+4	; 0x04
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	a1 f4       	brne	.+40     	; 0x236 <DIO_set_pin_value+0x1ba>
 20e:	a2 e3       	ldi	r26, 0x32	; 50
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	e2 e3       	ldi	r30, 0x32	; 50
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	48 2f       	mov	r20, r24
 21a:	8b 81       	ldd	r24, Y+3	; 0x03
 21c:	28 2f       	mov	r18, r24
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	02 2e       	mov	r0, r18
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_set_pin_value+0x1b0>
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	0a 94       	dec	r0
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_set_pin_value+0x1ac>
 230:	84 2b       	or	r24, r20
 232:	8c 93       	st	X, r24
 234:	14 c0       	rjmp	.+40     	; 0x25e <DIO_set_pin_value+0x1e2>
 236:	a2 e3       	ldi	r26, 0x32	; 50
 238:	b0 e0       	ldi	r27, 0x00	; 0
 23a:	e2 e3       	ldi	r30, 0x32	; 50
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	80 81       	ld	r24, Z
 240:	48 2f       	mov	r20, r24
 242:	8b 81       	ldd	r24, Y+3	; 0x03
 244:	28 2f       	mov	r18, r24
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 2e       	mov	r0, r18
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_set_pin_value+0x1d8>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	0a 94       	dec	r0
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_set_pin_value+0x1d4>
 258:	80 95       	com	r24
 25a:	84 23       	and	r24, r20
 25c:	8c 93       	st	X, r24
		break;
		}
	}
	return Error_state;
 25e:	89 81       	ldd	r24, Y+1	; 0x01
}
 260:	26 96       	adiw	r28, 0x06	; 6
 262:	0f b6       	in	r0, 0x3f	; 63
 264:	f8 94       	cli
 266:	de bf       	out	0x3e, r29	; 62
 268:	0f be       	out	0x3f, r0	; 63
 26a:	cd bf       	out	0x3d, r28	; 61
 26c:	cf 91       	pop	r28
 26e:	df 91       	pop	r29
 270:	08 95       	ret

00000272 <DIO_set_pin_direction>:

u8 DIO_set_pin_direction(u8 Port_no,u8 Pin_no,u8 Pin_direction){
 272:	df 93       	push	r29
 274:	cf 93       	push	r28
 276:	00 d0       	rcall	.+0      	; 0x278 <DIO_set_pin_direction+0x6>
 278:	00 d0       	rcall	.+0      	; 0x27a <DIO_set_pin_direction+0x8>
 27a:	00 d0       	rcall	.+0      	; 0x27c <DIO_set_pin_direction+0xa>
 27c:	cd b7       	in	r28, 0x3d	; 61
 27e:	de b7       	in	r29, 0x3e	; 62
 280:	8a 83       	std	Y+2, r24	; 0x02
 282:	6b 83       	std	Y+3, r22	; 0x03
 284:	4c 83       	std	Y+4, r20	; 0x04
	u8 Error_state=0;
 286:	19 82       	std	Y+1, r1	; 0x01
		if(Port_no>=DIO_max_port_no){
 288:	8a 81       	ldd	r24, Y+2	; 0x02
 28a:	84 30       	cpi	r24, 0x04	; 4
 28c:	18 f0       	brcs	.+6      	; 0x294 <DIO_set_pin_direction+0x22>
			Error_state=1;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	89 83       	std	Y+1, r24	; 0x01
 292:	e0 c0       	rjmp	.+448    	; 0x454 <DIO_set_pin_direction+0x1e2>
		}else if(Pin_no>=DIO_max_pin_no){
 294:	8b 81       	ldd	r24, Y+3	; 0x03
 296:	88 30       	cpi	r24, 0x08	; 8
 298:	18 f0       	brcs	.+6      	; 0x2a0 <DIO_set_pin_direction+0x2e>
			Error_state=2;
 29a:	82 e0       	ldi	r24, 0x02	; 2
 29c:	89 83       	std	Y+1, r24	; 0x01
 29e:	da c0       	rjmp	.+436    	; 0x454 <DIO_set_pin_direction+0x1e2>
		}else if((Pin_direction!=DIO_Input)&&(Pin_direction!=DIO_Output)){
 2a0:	8c 81       	ldd	r24, Y+4	; 0x04
 2a2:	88 23       	and	r24, r24
 2a4:	31 f0       	breq	.+12     	; 0x2b2 <DIO_set_pin_direction+0x40>
 2a6:	8c 81       	ldd	r24, Y+4	; 0x04
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	19 f0       	breq	.+6      	; 0x2b2 <DIO_set_pin_direction+0x40>
			Error_state=3;
 2ac:	83 e0       	ldi	r24, 0x03	; 3
 2ae:	89 83       	std	Y+1, r24	; 0x01
 2b0:	d1 c0       	rjmp	.+418    	; 0x454 <DIO_set_pin_direction+0x1e2>
		}else{
			switch(Port_no){
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	3e 83       	std	Y+6, r19	; 0x06
 2ba:	2d 83       	std	Y+5, r18	; 0x05
 2bc:	8d 81       	ldd	r24, Y+5	; 0x05
 2be:	9e 81       	ldd	r25, Y+6	; 0x06
 2c0:	81 30       	cpi	r24, 0x01	; 1
 2c2:	91 05       	cpc	r25, r1
 2c4:	09 f4       	brne	.+2      	; 0x2c8 <DIO_set_pin_direction+0x56>
 2c6:	43 c0       	rjmp	.+134    	; 0x34e <DIO_set_pin_direction+0xdc>
 2c8:	2d 81       	ldd	r18, Y+5	; 0x05
 2ca:	3e 81       	ldd	r19, Y+6	; 0x06
 2cc:	22 30       	cpi	r18, 0x02	; 2
 2ce:	31 05       	cpc	r19, r1
 2d0:	2c f4       	brge	.+10     	; 0x2dc <DIO_set_pin_direction+0x6a>
 2d2:	8d 81       	ldd	r24, Y+5	; 0x05
 2d4:	9e 81       	ldd	r25, Y+6	; 0x06
 2d6:	00 97       	sbiw	r24, 0x00	; 0
 2d8:	71 f0       	breq	.+28     	; 0x2f6 <DIO_set_pin_direction+0x84>
 2da:	bc c0       	rjmp	.+376    	; 0x454 <DIO_set_pin_direction+0x1e2>
 2dc:	2d 81       	ldd	r18, Y+5	; 0x05
 2de:	3e 81       	ldd	r19, Y+6	; 0x06
 2e0:	22 30       	cpi	r18, 0x02	; 2
 2e2:	31 05       	cpc	r19, r1
 2e4:	09 f4       	brne	.+2      	; 0x2e8 <DIO_set_pin_direction+0x76>
 2e6:	5f c0       	rjmp	.+190    	; 0x3a6 <DIO_set_pin_direction+0x134>
 2e8:	8d 81       	ldd	r24, Y+5	; 0x05
 2ea:	9e 81       	ldd	r25, Y+6	; 0x06
 2ec:	83 30       	cpi	r24, 0x03	; 3
 2ee:	91 05       	cpc	r25, r1
 2f0:	09 f4       	brne	.+2      	; 0x2f4 <DIO_set_pin_direction+0x82>
 2f2:	85 c0       	rjmp	.+266    	; 0x3fe <DIO_set_pin_direction+0x18c>
 2f4:	af c0       	rjmp	.+350    	; 0x454 <DIO_set_pin_direction+0x1e2>
			case Group_A: assign_bit(DIO_u8_DDRA,Pin_no,Pin_direction);
 2f6:	8c 81       	ldd	r24, Y+4	; 0x04
 2f8:	81 30       	cpi	r24, 0x01	; 1
 2fa:	a1 f4       	brne	.+40     	; 0x324 <DIO_set_pin_direction+0xb2>
 2fc:	aa e3       	ldi	r26, 0x3A	; 58
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	ea e3       	ldi	r30, 0x3A	; 58
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	48 2f       	mov	r20, r24
 308:	8b 81       	ldd	r24, Y+3	; 0x03
 30a:	28 2f       	mov	r18, r24
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 2e       	mov	r0, r18
 314:	02 c0       	rjmp	.+4      	; 0x31a <DIO_set_pin_direction+0xa8>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	0a 94       	dec	r0
 31c:	e2 f7       	brpl	.-8      	; 0x316 <DIO_set_pin_direction+0xa4>
 31e:	84 2b       	or	r24, r20
 320:	8c 93       	st	X, r24
 322:	98 c0       	rjmp	.+304    	; 0x454 <DIO_set_pin_direction+0x1e2>
 324:	aa e3       	ldi	r26, 0x3A	; 58
 326:	b0 e0       	ldi	r27, 0x00	; 0
 328:	ea e3       	ldi	r30, 0x3A	; 58
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	80 81       	ld	r24, Z
 32e:	48 2f       	mov	r20, r24
 330:	8b 81       	ldd	r24, Y+3	; 0x03
 332:	28 2f       	mov	r18, r24
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	02 2e       	mov	r0, r18
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_set_pin_direction+0xd0>
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	0a 94       	dec	r0
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_set_pin_direction+0xcc>
 346:	80 95       	com	r24
 348:	84 23       	and	r24, r20
 34a:	8c 93       	st	X, r24
 34c:	83 c0       	rjmp	.+262    	; 0x454 <DIO_set_pin_direction+0x1e2>
			break;
			case Group_B: assign_bit(DIO_u8_DDRB,Pin_no,Pin_direction);
 34e:	8c 81       	ldd	r24, Y+4	; 0x04
 350:	81 30       	cpi	r24, 0x01	; 1
 352:	a1 f4       	brne	.+40     	; 0x37c <DIO_set_pin_direction+0x10a>
 354:	a7 e3       	ldi	r26, 0x37	; 55
 356:	b0 e0       	ldi	r27, 0x00	; 0
 358:	e7 e3       	ldi	r30, 0x37	; 55
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	48 2f       	mov	r20, r24
 360:	8b 81       	ldd	r24, Y+3	; 0x03
 362:	28 2f       	mov	r18, r24
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	02 2e       	mov	r0, r18
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DIO_set_pin_direction+0x100>
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <DIO_set_pin_direction+0xfc>
 376:	84 2b       	or	r24, r20
 378:	8c 93       	st	X, r24
 37a:	6c c0       	rjmp	.+216    	; 0x454 <DIO_set_pin_direction+0x1e2>
 37c:	a7 e3       	ldi	r26, 0x37	; 55
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	e7 e3       	ldi	r30, 0x37	; 55
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	48 2f       	mov	r20, r24
 388:	8b 81       	ldd	r24, Y+3	; 0x03
 38a:	28 2f       	mov	r18, r24
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	02 2e       	mov	r0, r18
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_set_pin_direction+0x128>
 396:	88 0f       	add	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	0a 94       	dec	r0
 39c:	e2 f7       	brpl	.-8      	; 0x396 <DIO_set_pin_direction+0x124>
 39e:	80 95       	com	r24
 3a0:	84 23       	and	r24, r20
 3a2:	8c 93       	st	X, r24
 3a4:	57 c0       	rjmp	.+174    	; 0x454 <DIO_set_pin_direction+0x1e2>
			break;
			case Group_C: assign_bit(DIO_u8_DDRC,Pin_no,Pin_direction);
 3a6:	8c 81       	ldd	r24, Y+4	; 0x04
 3a8:	81 30       	cpi	r24, 0x01	; 1
 3aa:	a1 f4       	brne	.+40     	; 0x3d4 <DIO_set_pin_direction+0x162>
 3ac:	a4 e3       	ldi	r26, 0x34	; 52
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	e4 e3       	ldi	r30, 0x34	; 52
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	48 2f       	mov	r20, r24
 3b8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 2e       	mov	r0, r18
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <DIO_set_pin_direction+0x158>
 3c6:	88 0f       	add	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	0a 94       	dec	r0
 3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <DIO_set_pin_direction+0x154>
 3ce:	84 2b       	or	r24, r20
 3d0:	8c 93       	st	X, r24
 3d2:	40 c0       	rjmp	.+128    	; 0x454 <DIO_set_pin_direction+0x1e2>
 3d4:	a4 e3       	ldi	r26, 0x34	; 52
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	e4 e3       	ldi	r30, 0x34	; 52
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	48 2f       	mov	r20, r24
 3e0:	8b 81       	ldd	r24, Y+3	; 0x03
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 2e       	mov	r0, r18
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_set_pin_direction+0x180>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	0a 94       	dec	r0
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_set_pin_direction+0x17c>
 3f6:	80 95       	com	r24
 3f8:	84 23       	and	r24, r20
 3fa:	8c 93       	st	X, r24
 3fc:	2b c0       	rjmp	.+86     	; 0x454 <DIO_set_pin_direction+0x1e2>
			break;
			case Group_D: assign_bit(DIO_u8_DDRD,Pin_no,Pin_direction);
 3fe:	8c 81       	ldd	r24, Y+4	; 0x04
 400:	81 30       	cpi	r24, 0x01	; 1
 402:	a1 f4       	brne	.+40     	; 0x42c <DIO_set_pin_direction+0x1ba>
 404:	a1 e3       	ldi	r26, 0x31	; 49
 406:	b0 e0       	ldi	r27, 0x00	; 0
 408:	e1 e3       	ldi	r30, 0x31	; 49
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	80 81       	ld	r24, Z
 40e:	48 2f       	mov	r20, r24
 410:	8b 81       	ldd	r24, Y+3	; 0x03
 412:	28 2f       	mov	r18, r24
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	02 2e       	mov	r0, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <DIO_set_pin_direction+0x1b0>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	0a 94       	dec	r0
 424:	e2 f7       	brpl	.-8      	; 0x41e <DIO_set_pin_direction+0x1ac>
 426:	84 2b       	or	r24, r20
 428:	8c 93       	st	X, r24
 42a:	14 c0       	rjmp	.+40     	; 0x454 <DIO_set_pin_direction+0x1e2>
 42c:	a1 e3       	ldi	r26, 0x31	; 49
 42e:	b0 e0       	ldi	r27, 0x00	; 0
 430:	e1 e3       	ldi	r30, 0x31	; 49
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	80 81       	ld	r24, Z
 436:	48 2f       	mov	r20, r24
 438:	8b 81       	ldd	r24, Y+3	; 0x03
 43a:	28 2f       	mov	r18, r24
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	02 2e       	mov	r0, r18
 444:	02 c0       	rjmp	.+4      	; 0x44a <DIO_set_pin_direction+0x1d8>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	0a 94       	dec	r0
 44c:	e2 f7       	brpl	.-8      	; 0x446 <DIO_set_pin_direction+0x1d4>
 44e:	80 95       	com	r24
 450:	84 23       	and	r24, r20
 452:	8c 93       	st	X, r24
			break;
			}
		}
		return Error_state;
 454:	89 81       	ldd	r24, Y+1	; 0x01
}
 456:	26 96       	adiw	r28, 0x06	; 6
 458:	0f b6       	in	r0, 0x3f	; 63
 45a:	f8 94       	cli
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	0f be       	out	0x3f, r0	; 63
 460:	cd bf       	out	0x3d, r28	; 61
 462:	cf 91       	pop	r28
 464:	df 91       	pop	r29
 466:	08 95       	ret

00000468 <DIO_get_pin_value>:

u8 DIO_get_pin_value(u8 Port_no,u8 Pin_no,u8*Pin_value){
 468:	df 93       	push	r29
 46a:	cf 93       	push	r28
 46c:	cd b7       	in	r28, 0x3d	; 61
 46e:	de b7       	in	r29, 0x3e	; 62
 470:	27 97       	sbiw	r28, 0x07	; 7
 472:	0f b6       	in	r0, 0x3f	; 63
 474:	f8 94       	cli
 476:	de bf       	out	0x3e, r29	; 62
 478:	0f be       	out	0x3f, r0	; 63
 47a:	cd bf       	out	0x3d, r28	; 61
 47c:	8a 83       	std	Y+2, r24	; 0x02
 47e:	6b 83       	std	Y+3, r22	; 0x03
 480:	5d 83       	std	Y+5, r21	; 0x05
 482:	4c 83       	std	Y+4, r20	; 0x04
	u8 Error_state=0;
 484:	19 82       	std	Y+1, r1	; 0x01
			if(Port_no>=DIO_max_port_no){
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	84 30       	cpi	r24, 0x04	; 4
 48a:	18 f0       	brcs	.+6      	; 0x492 <DIO_get_pin_value+0x2a>
				Error_state=1;
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	89 83       	std	Y+1, r24	; 0x01
 490:	76 c0       	rjmp	.+236    	; 0x57e <DIO_get_pin_value+0x116>
			}else if(Pin_no>=DIO_max_pin_no){
 492:	8b 81       	ldd	r24, Y+3	; 0x03
 494:	88 30       	cpi	r24, 0x08	; 8
 496:	18 f0       	brcs	.+6      	; 0x49e <DIO_get_pin_value+0x36>
				Error_state=2;
 498:	82 e0       	ldi	r24, 0x02	; 2
 49a:	89 83       	std	Y+1, r24	; 0x01
 49c:	70 c0       	rjmp	.+224    	; 0x57e <DIO_get_pin_value+0x116>
			}else{
				switch(Port_no){
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	28 2f       	mov	r18, r24
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	3f 83       	std	Y+7, r19	; 0x07
 4a6:	2e 83       	std	Y+6, r18	; 0x06
 4a8:	4e 81       	ldd	r20, Y+6	; 0x06
 4aa:	5f 81       	ldd	r21, Y+7	; 0x07
 4ac:	41 30       	cpi	r20, 0x01	; 1
 4ae:	51 05       	cpc	r21, r1
 4b0:	59 f1       	breq	.+86     	; 0x508 <DIO_get_pin_value+0xa0>
 4b2:	8e 81       	ldd	r24, Y+6	; 0x06
 4b4:	9f 81       	ldd	r25, Y+7	; 0x07
 4b6:	82 30       	cpi	r24, 0x02	; 2
 4b8:	91 05       	cpc	r25, r1
 4ba:	34 f4       	brge	.+12     	; 0x4c8 <DIO_get_pin_value+0x60>
 4bc:	2e 81       	ldd	r18, Y+6	; 0x06
 4be:	3f 81       	ldd	r19, Y+7	; 0x07
 4c0:	21 15       	cp	r18, r1
 4c2:	31 05       	cpc	r19, r1
 4c4:	69 f0       	breq	.+26     	; 0x4e0 <DIO_get_pin_value+0x78>
 4c6:	5b c0       	rjmp	.+182    	; 0x57e <DIO_get_pin_value+0x116>
 4c8:	4e 81       	ldd	r20, Y+6	; 0x06
 4ca:	5f 81       	ldd	r21, Y+7	; 0x07
 4cc:	42 30       	cpi	r20, 0x02	; 2
 4ce:	51 05       	cpc	r21, r1
 4d0:	79 f1       	breq	.+94     	; 0x530 <DIO_get_pin_value+0xc8>
 4d2:	8e 81       	ldd	r24, Y+6	; 0x06
 4d4:	9f 81       	ldd	r25, Y+7	; 0x07
 4d6:	83 30       	cpi	r24, 0x03	; 3
 4d8:	91 05       	cpc	r25, r1
 4da:	09 f4       	brne	.+2      	; 0x4de <DIO_get_pin_value+0x76>
 4dc:	3d c0       	rjmp	.+122    	; 0x558 <DIO_get_pin_value+0xf0>
 4de:	4f c0       	rjmp	.+158    	; 0x57e <DIO_get_pin_value+0x116>
				case Group_A: *Pin_value=get_bit(DIO_u8_PINA,Pin_no);
 4e0:	e9 e3       	ldi	r30, 0x39	; 57
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	80 81       	ld	r24, Z
 4e6:	28 2f       	mov	r18, r24
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	8b 81       	ldd	r24, Y+3	; 0x03
 4ec:	88 2f       	mov	r24, r24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	a9 01       	movw	r20, r18
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_get_pin_value+0x90>
 4f4:	55 95       	asr	r21
 4f6:	47 95       	ror	r20
 4f8:	8a 95       	dec	r24
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_get_pin_value+0x8c>
 4fc:	ca 01       	movw	r24, r20
 4fe:	81 70       	andi	r24, 0x01	; 1
 500:	ec 81       	ldd	r30, Y+4	; 0x04
 502:	fd 81       	ldd	r31, Y+5	; 0x05
 504:	80 83       	st	Z, r24
 506:	3b c0       	rjmp	.+118    	; 0x57e <DIO_get_pin_value+0x116>
				break;
				case Group_B: *Pin_value=get_bit(DIO_u8_PINB,Pin_no);
 508:	e6 e3       	ldi	r30, 0x36	; 54
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	80 81       	ld	r24, Z
 50e:	28 2f       	mov	r18, r24
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	8b 81       	ldd	r24, Y+3	; 0x03
 514:	88 2f       	mov	r24, r24
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	a9 01       	movw	r20, r18
 51a:	02 c0       	rjmp	.+4      	; 0x520 <DIO_get_pin_value+0xb8>
 51c:	55 95       	asr	r21
 51e:	47 95       	ror	r20
 520:	8a 95       	dec	r24
 522:	e2 f7       	brpl	.-8      	; 0x51c <DIO_get_pin_value+0xb4>
 524:	ca 01       	movw	r24, r20
 526:	81 70       	andi	r24, 0x01	; 1
 528:	ec 81       	ldd	r30, Y+4	; 0x04
 52a:	fd 81       	ldd	r31, Y+5	; 0x05
 52c:	80 83       	st	Z, r24
 52e:	27 c0       	rjmp	.+78     	; 0x57e <DIO_get_pin_value+0x116>
				break;
				case Group_C: *Pin_value=get_bit(DIO_u8_PINC,Pin_no);
 530:	e3 e3       	ldi	r30, 0x33	; 51
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	80 81       	ld	r24, Z
 536:	28 2f       	mov	r18, r24
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	8b 81       	ldd	r24, Y+3	; 0x03
 53c:	88 2f       	mov	r24, r24
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	a9 01       	movw	r20, r18
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_get_pin_value+0xe0>
 544:	55 95       	asr	r21
 546:	47 95       	ror	r20
 548:	8a 95       	dec	r24
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_get_pin_value+0xdc>
 54c:	ca 01       	movw	r24, r20
 54e:	81 70       	andi	r24, 0x01	; 1
 550:	ec 81       	ldd	r30, Y+4	; 0x04
 552:	fd 81       	ldd	r31, Y+5	; 0x05
 554:	80 83       	st	Z, r24
 556:	13 c0       	rjmp	.+38     	; 0x57e <DIO_get_pin_value+0x116>
				break;
				case Group_D: *Pin_value=get_bit(DIO_u8_PIND,Pin_no);
 558:	e0 e3       	ldi	r30, 0x30	; 48
 55a:	f0 e0       	ldi	r31, 0x00	; 0
 55c:	80 81       	ld	r24, Z
 55e:	28 2f       	mov	r18, r24
 560:	30 e0       	ldi	r19, 0x00	; 0
 562:	8b 81       	ldd	r24, Y+3	; 0x03
 564:	88 2f       	mov	r24, r24
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	a9 01       	movw	r20, r18
 56a:	02 c0       	rjmp	.+4      	; 0x570 <DIO_get_pin_value+0x108>
 56c:	55 95       	asr	r21
 56e:	47 95       	ror	r20
 570:	8a 95       	dec	r24
 572:	e2 f7       	brpl	.-8      	; 0x56c <DIO_get_pin_value+0x104>
 574:	ca 01       	movw	r24, r20
 576:	81 70       	andi	r24, 0x01	; 1
 578:	ec 81       	ldd	r30, Y+4	; 0x04
 57a:	fd 81       	ldd	r31, Y+5	; 0x05
 57c:	80 83       	st	Z, r24
				break;
				}
			}
			return Error_state;
 57e:	89 81       	ldd	r24, Y+1	; 0x01
}
 580:	27 96       	adiw	r28, 0x07	; 7
 582:	0f b6       	in	r0, 0x3f	; 63
 584:	f8 94       	cli
 586:	de bf       	out	0x3e, r29	; 62
 588:	0f be       	out	0x3f, r0	; 63
 58a:	cd bf       	out	0x3d, r28	; 61
 58c:	cf 91       	pop	r28
 58e:	df 91       	pop	r29
 590:	08 95       	ret

00000592 <DIO_set_port_value>:

u8 DIO_set_port_value(u8 Port_no,u8 Port_value){
 592:	df 93       	push	r29
 594:	cf 93       	push	r28
 596:	00 d0       	rcall	.+0      	; 0x598 <DIO_set_port_value+0x6>
 598:	00 d0       	rcall	.+0      	; 0x59a <DIO_set_port_value+0x8>
 59a:	0f 92       	push	r0
 59c:	cd b7       	in	r28, 0x3d	; 61
 59e:	de b7       	in	r29, 0x3e	; 62
 5a0:	8a 83       	std	Y+2, r24	; 0x02
 5a2:	6b 83       	std	Y+3, r22	; 0x03
	u8 Error_state=0;
 5a4:	19 82       	std	Y+1, r1	; 0x01
		if(Port_no>=DIO_max_port_no){
 5a6:	8a 81       	ldd	r24, Y+2	; 0x02
 5a8:	84 30       	cpi	r24, 0x04	; 4
 5aa:	18 f0       	brcs	.+6      	; 0x5b2 <DIO_set_port_value+0x20>
			Error_state=1;
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	89 83       	std	Y+1, r24	; 0x01
 5b0:	32 c0       	rjmp	.+100    	; 0x616 <DIO_set_port_value+0x84>
		}else if(Port_value>DIO_max_port_value){
			Error_state=2;
		}else{
			switch(Port_no){
 5b2:	8a 81       	ldd	r24, Y+2	; 0x02
 5b4:	28 2f       	mov	r18, r24
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	3d 83       	std	Y+5, r19	; 0x05
 5ba:	2c 83       	std	Y+4, r18	; 0x04
 5bc:	8c 81       	ldd	r24, Y+4	; 0x04
 5be:	9d 81       	ldd	r25, Y+5	; 0x05
 5c0:	81 30       	cpi	r24, 0x01	; 1
 5c2:	91 05       	cpc	r25, r1
 5c4:	d1 f0       	breq	.+52     	; 0x5fa <DIO_set_port_value+0x68>
 5c6:	2c 81       	ldd	r18, Y+4	; 0x04
 5c8:	3d 81       	ldd	r19, Y+5	; 0x05
 5ca:	22 30       	cpi	r18, 0x02	; 2
 5cc:	31 05       	cpc	r19, r1
 5ce:	2c f4       	brge	.+10     	; 0x5da <DIO_set_port_value+0x48>
 5d0:	8c 81       	ldd	r24, Y+4	; 0x04
 5d2:	9d 81       	ldd	r25, Y+5	; 0x05
 5d4:	00 97       	sbiw	r24, 0x00	; 0
 5d6:	61 f0       	breq	.+24     	; 0x5f0 <DIO_set_port_value+0x5e>
 5d8:	1e c0       	rjmp	.+60     	; 0x616 <DIO_set_port_value+0x84>
 5da:	2c 81       	ldd	r18, Y+4	; 0x04
 5dc:	3d 81       	ldd	r19, Y+5	; 0x05
 5de:	22 30       	cpi	r18, 0x02	; 2
 5e0:	31 05       	cpc	r19, r1
 5e2:	81 f0       	breq	.+32     	; 0x604 <DIO_set_port_value+0x72>
 5e4:	8c 81       	ldd	r24, Y+4	; 0x04
 5e6:	9d 81       	ldd	r25, Y+5	; 0x05
 5e8:	83 30       	cpi	r24, 0x03	; 3
 5ea:	91 05       	cpc	r25, r1
 5ec:	81 f0       	breq	.+32     	; 0x60e <DIO_set_port_value+0x7c>
 5ee:	13 c0       	rjmp	.+38     	; 0x616 <DIO_set_port_value+0x84>
			case Group_A: DIO_u8_PORTA=Port_value;
 5f0:	eb e3       	ldi	r30, 0x3B	; 59
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	8b 81       	ldd	r24, Y+3	; 0x03
 5f6:	80 83       	st	Z, r24
 5f8:	0e c0       	rjmp	.+28     	; 0x616 <DIO_set_port_value+0x84>
			break;
			case Group_B: DIO_u8_PORTB=Port_value;
 5fa:	e8 e3       	ldi	r30, 0x38	; 56
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	8b 81       	ldd	r24, Y+3	; 0x03
 600:	80 83       	st	Z, r24
 602:	09 c0       	rjmp	.+18     	; 0x616 <DIO_set_port_value+0x84>
			break;
			case Group_C: DIO_u8_PORTC=Port_value;
 604:	e5 e3       	ldi	r30, 0x35	; 53
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	8b 81       	ldd	r24, Y+3	; 0x03
 60a:	80 83       	st	Z, r24
 60c:	04 c0       	rjmp	.+8      	; 0x616 <DIO_set_port_value+0x84>
			break;
			case Group_D: DIO_u8_PORTD=Port_value;
 60e:	e2 e3       	ldi	r30, 0x32	; 50
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	8b 81       	ldd	r24, Y+3	; 0x03
 614:	80 83       	st	Z, r24
			break;
			}
		}
		return Error_state;
 616:	89 81       	ldd	r24, Y+1	; 0x01
}
 618:	0f 90       	pop	r0
 61a:	0f 90       	pop	r0
 61c:	0f 90       	pop	r0
 61e:	0f 90       	pop	r0
 620:	0f 90       	pop	r0
 622:	cf 91       	pop	r28
 624:	df 91       	pop	r29
 626:	08 95       	ret

00000628 <DIO_set_port_direction>:

u8 DIO_set_port_direction(u8 Port_no,u8 Port_direction){
 628:	df 93       	push	r29
 62a:	cf 93       	push	r28
 62c:	00 d0       	rcall	.+0      	; 0x62e <DIO_set_port_direction+0x6>
 62e:	00 d0       	rcall	.+0      	; 0x630 <DIO_set_port_direction+0x8>
 630:	0f 92       	push	r0
 632:	cd b7       	in	r28, 0x3d	; 61
 634:	de b7       	in	r29, 0x3e	; 62
 636:	8a 83       	std	Y+2, r24	; 0x02
 638:	6b 83       	std	Y+3, r22	; 0x03
	u8 Error_state=0;
 63a:	19 82       	std	Y+1, r1	; 0x01
			if(Port_no>=DIO_max_port_no){
 63c:	8a 81       	ldd	r24, Y+2	; 0x02
 63e:	84 30       	cpi	r24, 0x04	; 4
 640:	18 f0       	brcs	.+6      	; 0x648 <DIO_set_port_direction+0x20>
				Error_state=1;
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	89 83       	std	Y+1, r24	; 0x01
 646:	32 c0       	rjmp	.+100    	; 0x6ac <DIO_set_port_direction+0x84>
			}else if(Port_direction>DIO_max_port_direction){
				Error_state=2;
			}else{
				switch(Port_no){
 648:	8a 81       	ldd	r24, Y+2	; 0x02
 64a:	28 2f       	mov	r18, r24
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	3d 83       	std	Y+5, r19	; 0x05
 650:	2c 83       	std	Y+4, r18	; 0x04
 652:	8c 81       	ldd	r24, Y+4	; 0x04
 654:	9d 81       	ldd	r25, Y+5	; 0x05
 656:	81 30       	cpi	r24, 0x01	; 1
 658:	91 05       	cpc	r25, r1
 65a:	d1 f0       	breq	.+52     	; 0x690 <DIO_set_port_direction+0x68>
 65c:	2c 81       	ldd	r18, Y+4	; 0x04
 65e:	3d 81       	ldd	r19, Y+5	; 0x05
 660:	22 30       	cpi	r18, 0x02	; 2
 662:	31 05       	cpc	r19, r1
 664:	2c f4       	brge	.+10     	; 0x670 <DIO_set_port_direction+0x48>
 666:	8c 81       	ldd	r24, Y+4	; 0x04
 668:	9d 81       	ldd	r25, Y+5	; 0x05
 66a:	00 97       	sbiw	r24, 0x00	; 0
 66c:	61 f0       	breq	.+24     	; 0x686 <DIO_set_port_direction+0x5e>
 66e:	1e c0       	rjmp	.+60     	; 0x6ac <DIO_set_port_direction+0x84>
 670:	2c 81       	ldd	r18, Y+4	; 0x04
 672:	3d 81       	ldd	r19, Y+5	; 0x05
 674:	22 30       	cpi	r18, 0x02	; 2
 676:	31 05       	cpc	r19, r1
 678:	81 f0       	breq	.+32     	; 0x69a <DIO_set_port_direction+0x72>
 67a:	8c 81       	ldd	r24, Y+4	; 0x04
 67c:	9d 81       	ldd	r25, Y+5	; 0x05
 67e:	83 30       	cpi	r24, 0x03	; 3
 680:	91 05       	cpc	r25, r1
 682:	81 f0       	breq	.+32     	; 0x6a4 <DIO_set_port_direction+0x7c>
 684:	13 c0       	rjmp	.+38     	; 0x6ac <DIO_set_port_direction+0x84>
				case Group_A: DIO_u8_DDRA=Port_direction;
 686:	ea e3       	ldi	r30, 0x3A	; 58
 688:	f0 e0       	ldi	r31, 0x00	; 0
 68a:	8b 81       	ldd	r24, Y+3	; 0x03
 68c:	80 83       	st	Z, r24
 68e:	0e c0       	rjmp	.+28     	; 0x6ac <DIO_set_port_direction+0x84>
				break;
				case Group_B: DIO_u8_DDRB=Port_direction;
 690:	e7 e3       	ldi	r30, 0x37	; 55
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	8b 81       	ldd	r24, Y+3	; 0x03
 696:	80 83       	st	Z, r24
 698:	09 c0       	rjmp	.+18     	; 0x6ac <DIO_set_port_direction+0x84>
				break;
				case Group_C: DIO_u8_DDRC=Port_direction;
 69a:	e4 e3       	ldi	r30, 0x34	; 52
 69c:	f0 e0       	ldi	r31, 0x00	; 0
 69e:	8b 81       	ldd	r24, Y+3	; 0x03
 6a0:	80 83       	st	Z, r24
 6a2:	04 c0       	rjmp	.+8      	; 0x6ac <DIO_set_port_direction+0x84>
				break;
				case Group_D: DIO_u8_DDRD=Port_direction;;
 6a4:	e1 e3       	ldi	r30, 0x31	; 49
 6a6:	f0 e0       	ldi	r31, 0x00	; 0
 6a8:	8b 81       	ldd	r24, Y+3	; 0x03
 6aa:	80 83       	st	Z, r24
				break;
				}
			}
			return Error_state;
 6ac:	89 81       	ldd	r24, Y+1	; 0x01
}
 6ae:	0f 90       	pop	r0
 6b0:	0f 90       	pop	r0
 6b2:	0f 90       	pop	r0
 6b4:	0f 90       	pop	r0
 6b6:	0f 90       	pop	r0
 6b8:	cf 91       	pop	r28
 6ba:	df 91       	pop	r29
 6bc:	08 95       	ret

000006be <__vector_11>:
u8 flag=0;
void __vector_11(void)  __attribute__((signal));


void __vector_11(void)
{
 6be:	1f 92       	push	r1
 6c0:	0f 92       	push	r0
 6c2:	0f b6       	in	r0, 0x3f	; 63
 6c4:	0f 92       	push	r0
 6c6:	11 24       	eor	r1, r1
 6c8:	2f 93       	push	r18
 6ca:	8f 93       	push	r24
 6cc:	9f 93       	push	r25
 6ce:	ef 93       	push	r30
 6d0:	ff 93       	push	r31
 6d2:	df 93       	push	r29
 6d4:	cf 93       	push	r28
 6d6:	cd b7       	in	r28, 0x3d	; 61
 6d8:	de b7       	in	r29, 0x3e	; 62
static u16 count=0;
count++;
 6da:	80 91 62 00 	lds	r24, 0x0062
 6de:	90 91 63 00 	lds	r25, 0x0063
 6e2:	01 96       	adiw	r24, 0x01	; 1
 6e4:	90 93 63 00 	sts	0x0063, r25
 6e8:	80 93 62 00 	sts	0x0062, r24
if(count==3907)
 6ec:	80 91 62 00 	lds	r24, 0x0062
 6f0:	90 91 63 00 	lds	r25, 0x0063
 6f4:	2f e0       	ldi	r18, 0x0F	; 15
 6f6:	83 34       	cpi	r24, 0x43	; 67
 6f8:	92 07       	cpc	r25, r18
 6fa:	81 f4       	brne	.+32     	; 0x71c <__vector_11+0x5e>
{
count=0;
 6fc:	10 92 63 00 	sts	0x0063, r1
 700:	10 92 62 00 	sts	0x0062, r1
TCNT0=192;//ارجعه تاني للربع الي عاوز اعده
 704:	e2 e5       	ldi	r30, 0x52	; 82
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	80 ec       	ldi	r24, 0xC0	; 192
 70a:	80 83       	st	Z, r24
//DIO_set_pin_value(Group_D,DIO_Pin_0,toggle_bit(state,0));
led_counter++;//دا كده بيزيد لما يعدي ثانيه
 70c:	80 91 60 00 	lds	r24, 0x0060
 710:	8f 5f       	subi	r24, 0xFF	; 255
 712:	80 93 60 00 	sts	0x0060, r24
flag=1;
 716:	81 e0       	ldi	r24, 0x01	; 1
 718:	80 93 61 00 	sts	0x0061, r24
}}
 71c:	cf 91       	pop	r28
 71e:	df 91       	pop	r29
 720:	ff 91       	pop	r31
 722:	ef 91       	pop	r30
 724:	9f 91       	pop	r25
 726:	8f 91       	pop	r24
 728:	2f 91       	pop	r18
 72a:	0f 90       	pop	r0
 72c:	0f be       	out	0x3f, r0	; 63
 72e:	0f 90       	pop	r0
 730:	1f 90       	pop	r1
 732:	18 95       	reti

00000734 <main>:
void main(void)
{static u8 state_1=0,state_2=0,state_3=0;
 734:	df 93       	push	r29
 736:	cf 93       	push	r28
 738:	cd b7       	in	r28, 0x3d	; 61
 73a:	de b7       	in	r29, 0x3e	; 62
	DIO_set_pin_direction(Group_D,DIO_Pin_0,DIO_Output);
 73c:	83 e0       	ldi	r24, 0x03	; 3
 73e:	60 e0       	ldi	r22, 0x00	; 0
 740:	41 e0       	ldi	r20, 0x01	; 1
 742:	0e 94 39 01 	call	0x272	; 0x272 <DIO_set_pin_direction>
	DIO_set_pin_direction(Group_D,DIO_Pin_1,DIO_Output);
 746:	83 e0       	ldi	r24, 0x03	; 3
 748:	61 e0       	ldi	r22, 0x01	; 1
 74a:	41 e0       	ldi	r20, 0x01	; 1
 74c:	0e 94 39 01 	call	0x272	; 0x272 <DIO_set_pin_direction>
	DIO_set_pin_direction(Group_D,DIO_Pin_2,DIO_Output);
 750:	83 e0       	ldi	r24, 0x03	; 3
 752:	62 e0       	ldi	r22, 0x02	; 2
 754:	41 e0       	ldi	r20, 0x01	; 1
 756:	0e 94 39 01 	call	0x272	; 0x272 <DIO_set_pin_direction>

	TCCR0=0b00000010;//bit 3 and bit 6 for modes 0 and 0 normal mode and prescaler 8 mhz (divid 8000000/8 to get 1000000 mhz (prescaler bits 0,1,2)
 75a:	e3 e5       	ldi	r30, 0x53	; 83
 75c:	f0 e0       	ldi	r31, 0x00	; 0
 75e:	82 e0       	ldi	r24, 0x02	; 2
 760:	80 83       	st	Z, r24
	TCNT0=192;//192 preload
 762:	e2 e5       	ldi	r30, 0x52	; 82
 764:	f0 e0       	ldi	r31, 0x00	; 0
 766:	80 ec       	ldi	r24, 0xC0	; 192
 768:	80 83       	st	Z, r24
	set_bit(TIMSK,0);//enable over flow interupt like  sie (spisific intrupt enable)
 76a:	a9 e5       	ldi	r26, 0x59	; 89
 76c:	b0 e0       	ldi	r27, 0x00	; 0
 76e:	e9 e5       	ldi	r30, 0x59	; 89
 770:	f0 e0       	ldi	r31, 0x00	; 0
 772:	80 81       	ld	r24, Z
 774:	81 60       	ori	r24, 0x01	; 1
 776:	8c 93       	st	X, r24
	set_bit(SREG,7);//enable over flow interupt like  gie (global intrupt enable)
 778:	af e5       	ldi	r26, 0x5F	; 95
 77a:	b0 e0       	ldi	r27, 0x00	; 0
 77c:	ef e5       	ldi	r30, 0x5F	; 95
 77e:	f0 e0       	ldi	r31, 0x00	; 0
 780:	80 81       	ld	r24, Z
 782:	80 68       	ori	r24, 0x80	; 128
 784:	8c 93       	st	X, r24

	while(1){
		if(flag==1)
 786:	80 91 61 00 	lds	r24, 0x0061
 78a:	81 30       	cpi	r24, 0x01	; 1
 78c:	e1 f7       	brne	.-8      	; 0x786 <main+0x52>
		{
		if (led_counter%1==0)//هتشتغل علطول
		{
			DIO_set_pin_value(Group_D,DIO_Pin_0,toggle_bit(state_1,0));
 78e:	90 91 66 00 	lds	r25, 0x0066
 792:	81 e0       	ldi	r24, 0x01	; 1
 794:	89 27       	eor	r24, r25
 796:	80 93 66 00 	sts	0x0066, r24
 79a:	90 91 66 00 	lds	r25, 0x0066
 79e:	83 e0       	ldi	r24, 0x03	; 3
 7a0:	60 e0       	ldi	r22, 0x00	; 0
 7a2:	49 2f       	mov	r20, r25
 7a4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_set_pin_value>
		}
		if (led_counter%2==0)//تشتغل مع مضاعفات الاتنين
 7a8:	80 91 60 00 	lds	r24, 0x0060
 7ac:	88 2f       	mov	r24, r24
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	81 70       	andi	r24, 0x01	; 1
 7b2:	90 70       	andi	r25, 0x00	; 0
 7b4:	00 97       	sbiw	r24, 0x00	; 0
 7b6:	69 f4       	brne	.+26     	; 0x7d2 <main+0x9e>
				{
					DIO_set_pin_value(Group_D,DIO_Pin_1,toggle_bit(state_2,0));
 7b8:	90 91 65 00 	lds	r25, 0x0065
 7bc:	81 e0       	ldi	r24, 0x01	; 1
 7be:	89 27       	eor	r24, r25
 7c0:	80 93 65 00 	sts	0x0065, r24
 7c4:	90 91 65 00 	lds	r25, 0x0065
 7c8:	83 e0       	ldi	r24, 0x03	; 3
 7ca:	61 e0       	ldi	r22, 0x01	; 1
 7cc:	49 2f       	mov	r20, r25
 7ce:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_set_pin_value>
				}
		if (led_counter%3==0)
 7d2:	80 91 60 00 	lds	r24, 0x0060
 7d6:	93 e0       	ldi	r25, 0x03	; 3
 7d8:	69 2f       	mov	r22, r25
 7da:	0e 94 02 04 	call	0x804	; 0x804 <__udivmodqi4>
 7de:	89 2f       	mov	r24, r25
 7e0:	88 23       	and	r24, r24
 7e2:	69 f4       	brne	.+26     	; 0x7fe <main+0xca>
				{
					DIO_set_pin_value(Group_D,DIO_Pin_2,toggle_bit(state_3,0));//تشتغل مع مضاعفات التلاته
 7e4:	90 91 64 00 	lds	r25, 0x0064
 7e8:	81 e0       	ldi	r24, 0x01	; 1
 7ea:	89 27       	eor	r24, r25
 7ec:	80 93 64 00 	sts	0x0064, r24
 7f0:	90 91 64 00 	lds	r25, 0x0064
 7f4:	83 e0       	ldi	r24, 0x03	; 3
 7f6:	62 e0       	ldi	r22, 0x02	; 2
 7f8:	49 2f       	mov	r20, r25
 7fa:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_set_pin_value>
				}
		flag=0;
 7fe:	10 92 61 00 	sts	0x0061, r1
 802:	c1 cf       	rjmp	.-126    	; 0x786 <main+0x52>

00000804 <__udivmodqi4>:
 804:	99 1b       	sub	r25, r25
 806:	79 e0       	ldi	r23, 0x09	; 9
 808:	04 c0       	rjmp	.+8      	; 0x812 <__udivmodqi4_ep>

0000080a <__udivmodqi4_loop>:
 80a:	99 1f       	adc	r25, r25
 80c:	96 17       	cp	r25, r22
 80e:	08 f0       	brcs	.+2      	; 0x812 <__udivmodqi4_ep>
 810:	96 1b       	sub	r25, r22

00000812 <__udivmodqi4_ep>:
 812:	88 1f       	adc	r24, r24
 814:	7a 95       	dec	r23
 816:	c9 f7       	brne	.-14     	; 0x80a <__udivmodqi4_loop>
 818:	80 95       	com	r24
 81a:	08 95       	ret

0000081c <_exit>:
 81c:	f8 94       	cli

0000081e <__stop_program>:
 81e:	ff cf       	rjmp	.-2      	; 0x81e <__stop_program>
